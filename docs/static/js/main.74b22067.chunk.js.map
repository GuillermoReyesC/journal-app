{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","console","log","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","lengh","createUserWithEmailAndPassword","updateProfile","startRegisterEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.74b22067.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCVz80tSJypLsz0T___JzE0GSEpVH61j34\",\r\n    authDomain: \"react-app-cursos-64004.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-cursos-64004-default-rtdb.firebaseio.com\",\r\n    projectId: \"react-app-cursos-64004\",\r\n    storageBucket: \"react-app-cursos-64004.appspot.com\",\r\n    messagingSenderId: \"545644887195\",\r\n    appId: \"1:545644887195:web:4a7c8fea8958c89f8eda3e\"\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const types = {\r\n\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n    register: '[auth] Register',\r\n\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set Active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update notes',\r\n    notesDelete: '[Notes] Delete notes',\r\n    notesFileUrl: '[Notes] Update image URL',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n    \r\n    \r\n   \r\n    \r\n    //\r\n\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    \r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id:snapHijo.id, \r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    console.log(notes)\r\n\r\n    return notes;\r\n\r\n}","\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/ultracloud/upload'\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData  \r\n        })\r\n\r\n        if(resp.ok) {\r\n\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return async(dispatch, getState) => {\r\n    \r\n        const  { uid }  = getState().auth;       \r\n       \r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        \r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n       // console.log(newNote)\r\n\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport const activeNote = ( id, note) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async(  dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ){\r\n\r\n            delete note.url;\r\n\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\r\n\r\n        dispatch ( refreshNote( note.id, note ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note:{\r\n            id, \r\n            ...note\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const startUploading = (file) => {\r\n    return async( dispatch, getState ) =>{\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text:'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n\r\n       \r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        console.log(fileUrl)\r\n\r\n        Swal.close();\r\n    }\r\n\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = (  ) => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n\r\n    type:types.uiSetError,\r\n    payload: err \r\n    })\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n","import Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\"\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n        return (dispatch) => {\r\n\r\n                dispatch( startLoading() );\r\n\r\n                firebase.auth().signInWithEmailAndPassword( email, password )\r\n                .then( ({ user }) => {\r\n                        dispatch(\r\n                                login( user.uid, user.displayName ) \r\n                        );\r\n\r\n                 dispatch( finishLoading() );        \r\n                })\r\n                .catch ( ( e ) => {\r\n                        console.log(e)\r\n                        dispatch( finishLoading() );\r\n                        Swal.fire('Error', e.message, 'error');\r\n                                \r\n                        \r\n                })\r\n                \r\n\r\n\r\n               // dispatch( login( 123, 'thor' ) );\r\n        }}\r\n\r\n        export const startRegisterEmailPasswordName = ( email, password, name ) => {\r\n                return (dispatch) => {\r\n\r\n                        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n                        .then( async({ user }) => {\r\n\r\n                               await user.updateProfile( { displayName: name } )\r\n\r\n                        \r\n                               \r\n                                dispatch(\r\n                                         login( user.uid, user.displayName ) \r\n                                )\r\n\r\n                        })\r\n                        .catch( e =>{\r\n                                console.log(e);\r\n                                Swal.fire('Error', e.message, 'error');\r\n                                \r\n                        })\r\n                }\r\n        \r\n        }\r\n\r\nexport const startGoogleLogin = () => {\r\n        return (dispatch) => {\r\n                \r\n                firebase.auth( ).signInWithPopup( googleAuthProvider )\r\n                .then( ({ user }) => {\r\n                      dispatch( \r\n                        login( user.uid, user.displayName) \r\n                        );\r\n                        \r\n                } )\r\n\r\n\r\n                }}\r\n        \r\n\r\n\r\n export const login = (uid, displayName) => ({\r\n    \r\n        type:types.login,\r\n         payload:{\r\n            uid,\r\n            displayName\r\n             \r\n        }\r\n});\r\n\r\nexport const startLogout = ( ) => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut()\r\n            dispatch( logout() );\r\n            dispatch( noteLogout() )\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type:types.logout\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading }= useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'hola@hola.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email, password ) );\r\n        \r\n\r\n    }\r\n\r\n    const handleGoogleLogin = (  ) => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n            onSubmit={ handleLogin }\r\n            className=\"animate__animated animate__fadeIn animate__faster\"\r\n            \r\n            >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value = { password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                \r\n                <div \r\n                    className=\"auth__social-networks\"\r\n                    onClick={ handleGoogleLogin  }    \r\n                >\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account    \r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\n\r\nimport { setError, removeError } from '../../actions/ui'\r\nimport { startRegisterEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n    \r\n    \r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n\r\n        name: 'thor',\r\n        email: 'thor@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n\r\n    })\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterEmailPasswordName(email, password, name) )\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = (  ) => {\r\n\r\n       \r\n        if ( name.trim().length === 0 ) {\r\n\r\n            dispatch( setError('Name is required') );\r\n\r\n            \r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is required'))\r\n\r\n            \r\n            return false;\r\n        } else if ( password !== password2 || password.lengh < 5 ) {\r\n            dispatch( setError('Password is required, has to match each other or too short'))\r\n            return false;\r\n        }\r\n\r\n        dispatch ( removeError() )\r\n        return true\r\n\r\n\r\n\r\n    }\r\n         \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n               { \r\n                    msgError && \r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value = { password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value = { password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n               \r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\n\r\nexport const JournalEntry = ( { id, date, title, body, url } ) => {\r\n\r\n    const noteDate = moment( date );\r\n    const dispatch = useDispatch(  );\r\n\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote( id, { \r\n                date, title, body, url\r\n             } )\r\n        );\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log(id, date, title, body, url)\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            \r\n          { \r\n            url &&\r\n           <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${ url })`\r\n                }}\r\n            ></div>\r\n          \r\n          }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                 notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note } \r\n                    />\r\n                )) \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { useSelector } from 'react-redux';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        \r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            \r\n            \r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />    \r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\nexport const NotesAppBar = ( date ) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector( state =>state.notes );\r\n    \r\n    const handleSave = (  ) => {\r\n        dispatch(startSaveNote( active ))\r\n    }\r\n\r\n    const handlePictureClick = ( ) => {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = ( e ) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    const noteDate = moment( date );\r\n\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span> { noteDate.format('MMM Do YY') } </span>\r\n            <input\r\n                id='fileSelector'\r\n                type='file'\r\n                name='file'\r\n                style={{ display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                className=\"btn\"\r\n                onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { active:note } = useSelector(state => state.notes)\r\n    const [formValues, handleInputChange, reset  ] = useForm( note );   \r\n    const { body, title, id } = formValues;\r\n\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n\r\n        if ( note.id !== activeId.current ) {\r\n            reset ( note );\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [ note, reset ] )\r\n   \r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n       \r\n    }, [formValues, dispatch])\r\n\r\n\r\n\r\n    const handleDelete = (  ) => {\r\n        dispatch( startDeleting( id ) )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value = { title }\r\n                    onChange={ handleInputChange }\r\n                    name='title'\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    value = { body }\r\n                    onChange={ handleInputChange }\r\n                    name= 'body'\r\n                />\r\n\r\n              { \r\n                (note.url) \r\n                && (\r\n                \r\n              <div className=\"notes__image\">\r\n                    <img \r\n                        src={ note.url }\r\n                        alt=\"imagen\"\r\n                    />\r\n                </div>\r\n                    )\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n                \r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport { NothingSelected } from './NothingSelected';\r\n \r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes );\r\n\r\n    return (\r\n        <div \r\n        className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n            \r\n            <Sidebar />\r\n              \r\n            <main>\r\n\r\n                { \r\n                    (active) \r\n                    ? (<NoteScreen />) \r\n                    : (<NothingSelected />) \r\n                }\r\n\r\n                \r\n              \r\n\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from 'react-router-dom';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute.js';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport {  startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setChecking ] = useState( true );\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            \r\n                if (user?.uid) {\r\n                    dispatch( login( user.uid, user.displayName ) );\r\n                    setIsLoggedIn( true );\r\n\r\n                   \r\n                    dispatch( startLoadingNotes( user.uid ) )\r\n\r\n                   console.log(user.displayName)\r\n\r\n\r\n                    console.log('user logged in');\r\n                } else {\r\n                    setIsLoggedIn( false );\r\n                    console.log('user not logged in');\r\n                }\r\n\r\n                setChecking( false );\r\n            \r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn] );   \r\n    \r\n    if ( checking ) {\r\n        return (\r\n            <h1>wait..</h1>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        isAuthenticated={ isLoggedIn }\r\n                        component={ AuthRouter }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }    \r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active:null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n        switch ( action.type ) {\r\n\r\n            case types.notesActive:\r\n                return { \r\n                    ...state,\r\n                    active:{\r\n                        ...action.payload\r\n                    }\r\n                }\r\n\r\n\r\n            case types.notesAddNew:\r\n                return {\r\n                    ...state,\r\n                    notes: [ action.payload, ...state.notes ]\r\n                }\r\n\r\n            case types.notesLoad:\r\n                return {\r\n                    ...state,\r\n                    notes : [ ...action.payload ]\r\n                }\r\n\r\n            case types.notesUpdated:\r\n                return { \r\n                    ...state,\r\n                    notes: state.notes.map(  \r\n                        note  => note.id === action.payload.id\r\n                            ? action.payload.note\r\n                            : note\r\n                    \r\n                    )\r\n                }\r\n\r\n\r\n                case types.notesDelete:\r\n                    return { \r\n                        ...state,\r\n                        active:null,\r\n                        notes: state.notes.filter( note => note.id !== action.payload )\r\n                    }\r\n\r\n\r\n                case types.notesLogoutCleaning:\r\n                    return {\r\n                        ...state,\r\n                        active: null,\r\n                        notes: []\r\n                    }\r\n\r\n            default:\r\n                return state;\r\n\r\n        }\r\n\r\n\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n  \r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n\r\n    // ...\r\n    // add reducers here\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    \r\n    composeEnhancers(   \r\n        applyMiddleware(thunk)\r\n    ))","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const authReducer = ( state = {} , action ) => {\r\n\r\nswitch (action.type) {\r\n    case types.login:\r\n            return { \r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n                \r\n            \r\n            }\r\n    case types.logout:\r\n            return { }\r\n            \r\n\r\n        \r\n\r\n    default:\r\n        return state;\r\n}\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { JournalApp } from './JournalApp';\r\nimport './styles/styles.scss'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <JournalApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}